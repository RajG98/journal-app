pipeline {
    agent any
    
    environment{
        TARGET_DIR_FOR_DEV='C:\\apache-tomcat-11.0.8-windows-x64\\Tomcat11-DEV\\webapps'
        TARGET_DIR_FOR_QA='C:\\apache-tomcat-11.0.8-windows-x64\\Tomcat11-QA\\webapps'
        WAR_NAME='journal.war'
    }
    parameters {
        string(name: 'GIT_CREDENTIALS_ID', defaultValue: 'github-token', description: 'Jenkins GitHub credentials ID')
    }

    stages {
        stage('Clone'){
            steps{
                checkout scmGit(
                    branches: [[name: '*/main']], // or your desired branch, e.g., '*/master'
                    extensions: [],
                    userRemoteConfigs: [[
                        credentialsId: "${params.GIT_CREDENTIALS_ID}", // ID of your Jenkins credentials
                        url: 'https://github.com/RajG98/journal-app.git' // Replace with your repository URL
                    ]]
                )
                
            }
        }
        stage('Build') {
            steps {
                dir('backend'){
                    bat "mvn clean package"
                }
                

            }
        }
        stage('Copy to DEV') {
            steps {
                dir('backend'){
                    bat "xcopy /Y target\\${WAR_NAME} ${TARGET_DIR_FOR_DEV}"
                }
            }
        }
        stage('Stop Tomcat'){
            steps{
                catchError(buildResult: 'SUCCESS', stageResult: 'UNSTABLE'){ 
                    bat "sc stop Tomcat11-DEV"
                }
            }
        }
        stage('Start Tomcat') {
            steps {
                
                bat "sc start Tomcat11-DEV"
            }
        }
        stage('Approve for QA'){
            steps{
                input message:'Approve build to QA?'
            }
        }
    }
    post{
        success {
            echo 'Pipeline successfully completed'
        }
        failure{
            echo 'Pipeline failed'
        }
    }
}